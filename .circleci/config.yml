version: 2
jobs:
  build_base:
    docker:
      - image: circleci/builder-base
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS

    working_directory: ~/docker-spark

    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - checkout
      - run:
          name: Set build-time environment variables
          command: |
            set -x
            SPARK_VERSION=$(cat base/version)
            echo "export SPARK_VERSION=$SPARK_VERSION" >> $BASH_ENV
      - run:
          name: Build Docker container
          command: docker build --build-arg SPARK_VERSION=$SPARK_VERSION -t verdigristech/spark:$SPARK_VERSION base
      - run:
          name: Saving image to a tar archive
          command: docker save -o spark-base.tar verdigristech/spark:$SPARK_VERSION
      - run:
          name: Save latest build number
          command: echo $CIRCLE_BUILD_NUM > spark-base-build-num
      - save_cache:
          key: v1-docker-spark-base-{{ .Revision }}-{{ .Branch }}
          paths:
            - spark-base-build-num
      - store_artifacts:
          path: ~/docker-spark/spark-base.tar
          destination: /out/images/spark-base.tar

  build_master:
    docker:
      - image: circleci/builder-base

    working_directory: ~/docker-spark

    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - checkout
      - run:
          name: Set build-time environment variables
          command: |
            set -x
            SPARK_VERSION=$(cat base/version)
            echo "export SPARK_VERSION=$SPARK_VERSION" >> $BASH_ENV
      - run:
          name: Build Docker container
          command: docker build -t verdigristech/spark:master-$SPARK_VERSION master
      - run:
          name: Saving image to a tar archive
          command: docker save -o spark-master.tar verdigristech/spark:master-$SPARK_VERSION
      - run:
          name: Save latest build number
          command: echo $CIRCLE_BUILD_NUM > spark-master-build-num
      - save_cache:
          key: v1-docker-spark-master-{{ .Revision }}-{{ .Branch }}
          paths:
            - spark-master-build-num
      - store_artifacts:
          path: ~/docker-spark/spark-master.tar
          destination: /out/images/spark-master.tar

  deploy:
    docker:
      - image: circleci/builder-base
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS

    working_directory: ~/docker-spark

    steps:
      - setup_remote_docker
      - run:
          name: Install curl
          command: apt-get update && apt-get install -y curl
      - restore_cache:
          keys:
            - v1-docker-spark-base-{{ .Revision }}-{{ .Branch }}
            - v1-docker-spark-base-{{ .Revision }}
            - v1-docker-spark-base
      - run:
          name: Download build artifacts
          command: |
            export SPARK_BASE_BUILD_NUM=$(cat spark-base-build-num)
            curl -# https://circleci.com/api/v1.1/project/github/VerdigrisTech/docker-spark/${SPARK_BASE_BUILD_NUM}/artifacts?circle-token=${CIRCLE_TOKEN} | grep -o 'https://[^"]*' > artifacts.txt
            <artifacts.txt xargs -P4 -I % curl -#O %
      - run:
          name: Restore Docker images
          command: |
            ls -1 *.tar | xargs -P4 -I % docker load -i %
      - run:
          name: Login to Docker Hub
          command: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run:
          name: Push image to Docker Hub
          command: docker images --filter "dangling=false" --format "{{.Repository}}:{{.Tag}}" verdigristech/* | xargs -P4 -I % docker push %

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build_base:
          context: common
      - build_master:
          context: common
          requires:
            - build_base
      - deploy:
          context: common
          requires:
            - build_master
