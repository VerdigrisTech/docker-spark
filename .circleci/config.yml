version: 2
jobs:
  build_base:
    docker:
      - image: circleci/builder-base
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS

    working_directory: ~/docker-spark

    steps:
      - setup_remote_docker
      - checkout
      - run:
          name: Set build-time environment variables
          command: |
            set -x
            SPARK_VERSION=$(cat base/version)
            echo "export SPARK_VERSION=$SPARK_VERSION" >> $BASH_ENV
      - run:
          name: Build Docker container
          command: docker build --build-arg SPARK_VERSION=$SPARK_VERSION -t verdigristech/spark:$SPARK_VERSION base

      - run:
          name: Saving image to a tar archive
          command: docker save -o spark-base.tar verdigristech/spark:$SPARK_VERSION

      - store_artifacts:
          path: ~/docker-spark/spark-base.tar
          destination: /out/images/spark-base.tar

  deploy:
    docker:
      - image: debian:stretch-slim
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS

    working_directory: ~/docker-spark

    steps:
      - setup_remote_docker
      - run:
          name: Install curl
          command: apt-get update && apt-get install -y curl
      - run:
          name: Download build artifacts
          command: |
            curl https://circleci.com/api/v1.1/project/github/VerdigrisTech/docker-spark/${CIRCLE_BUILD_NUM}/artifacts?circle-token=${CIRCLE_TOKEN} | grep -o 'https://[^"]*' > artifacts.txt
            <artifacts.txt xargs -P4 -I % curl -O %
      - run:
          name: Restore Docker images
          command: |
            ls -1 *.tar | xargs -P4 -I % docker load -i %

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build_base:
          context: common
      - deploy:
          context: common
          requires:
            - build_base
